
* Groebner基底と固有値法

有理数(QQ) を係数とする多変数($x_1, x_2$) の
多項式環 $QQ[x_1, x_2]$ を生成し，
不定元$x_1, x_2$を取り出す:

#+BEGIN_SRC sage :session sage
x_1, x_2 = QQ['x_1,x_2'].gens()
#+END_SRC

#+RESULTS:


$x_1, x_2, x_3$を使って多項式を定義する:
#+BEGIN_SRC sage :session sage
f_1 = 2 * x_1^3 * x_2 +6*x_1^3 - 2* x_1^2 - x_1* x_2 - 3* x_1 - x_2 +3
f_2 = x_1^3*x_2 + 3*x_1^3 + x_1^2*x_2 + 2*x_1^2
f_3 = 3*x_1^2*x_2 + 9*x_1^2 + 2*x_1*x_2 + 5*x_1 + x_2 -3
f_1
f_2
f_3
#+END_SRC

#+RESULTS:
: 2*x_1^3*x_2 + 6*x_1^3 - 2*x_1^2 - x_1*x_2 - 3*x_1 - x_2 + 3
: x_1^3*x_2 + 3*x_1^3 + x_1^2*x_2 + 2*x_1^2
: 3*x_1^2*x_2 + 9*x_1^2 + 2*x_1*x_2 + 5*x_1 + x_2 - 3



$f_1$, $f_2$, $f_3$ を基底とするイデアル $I$ を生成する:
#+BEGIN_SRC sage :session sage
I = ideal(f_1, f_2, f_3)
I
#+END_SRC

#+RESULTS:
: Ideal (2*x_1^3*x_2 + 6*x_1^3 - 2*x_1^2 - x_1*x_2 - 3*x_1 - x_2 + 3,
x_1^3*x_2 + 3*x_1^3 + x_1^2*x_2 + 2*x_1^2,
3*x_1^2*x_2 + 9*x_1^2 + 2*x_1*x_2 + 5*x_1 + x_2 - 3)
of Multivariate Polynomial Ring in x_1, x_2 over Rational Field

$I$ のグレブナー基底を求める:

#+BEGIN_SRC sage :session sage
B = I.groebner_basis(); B
#+END_SRC

#+RESULTS:
: [x_1^2 - 3/2*x_1 + x_2 - 3, x_1*x_2 + x_1 - x_2 + 3, x_2^2 - 4*x_1 - 5/2*x_2 - 3/2]

$QQ[x_1, x_2]/I$は，$1, x_2, x_1$ が基底となることがわかる。

#+BEGIN_SRC sage
type(B)
#+END_SRC

$QQ[x_1, x_2]/I$における，かけ算表を作成する:

#+BEGIN_SRC sage
bases = [1,x_1,x_2]
x_1p = [I.reduce(x_1*a) for a in bases]; x_1p
x_2p = [I.reduce(x_2*a) for a in bases]; x_2p

#+END_SRC

#+RESULTS:
: [x_1, 3/2*x_1 - x_2 + 3, -x_1 + x_2 - 3]
: [x_2, -x_1 + x_2 - 3, 4*x_1 + 5/2*x_2 + 3/2]

#+BEGIN_SRC sage
P1 = [ f.coefficient(b) for b in [{x_1:0, x_2:0}, {x_1:1, x_2:0}, {x_1:0, x_2:1}] for f in x_1p]; P1
P2 = [ f.coefficient(b) for b in [{x_1:0, x_2:0}, {x_1:1, x_2:0}, {x_1:0, x_2:1}] for f in x_2p]; P2
#+END_SRC


#+RESULTS:
: [0, 3, -3, 1, 3/2, -1, 0, -1, 1]
: [0, -3, 3/2, 0, -1, 4, 1, 1, 5/2]

#+BEGIN_SRC sage
M1 = matrix(QQ,3,3,P1); M1
M2 = matrix(QQ,3,3,P2); M2

#+END_SRC

#+RESULTS:
: 
: [  0   3  -3]
: [  1 3/2  -1]
: [  0  -1   1]
: 
: [  0  -3 3/2]
: [  0  -1   4]
: [  1   1 5/2]

#+BEGIN_SRC sage
s1 = M1.eigenvalues(); s1
s2 = M2.eigenvalues(); s2

#+END_SRC

#+RESULTS:
: [0, -0.765564437074638?, 3.265564437074638?]
: [3, -2.765564437074638?, 1.265564437074638?]

#+BEGIN_SRC sage
[[i,j,yf_1.subs({x_1:s1[i], x_2:s2[j]}), f_2.subs({x_1:s1[i], x_2:s2[j]})] 
  for i in range(3) for j in range(3)]
#+END_SRC

#+RESULTS:
#+begin_example

[[0, 0, 0, 0],
 [0, 1, 5.765564437074638?, 0],
 [0, 2, 1.734435562925363?, 0],
 [1, 0, -1.963057085015917?, 0.2383115901485682?],
 [1, 1, 4.562484917954546?, -0.5538774415303320?],
 [1, 2, 0.?e-17, 0.?e-17],
 [2, 0, 376.9630570850159?, 262.2616884098514?],
 [2, 1, 0.?e-15, 0.?e-16],
 [2, 2, 263.5625150820455?, 183.3663774415304?]]
#+end_example


